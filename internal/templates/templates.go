package templates

import (
	"io/fs"
	"os"
	"path/filepath"
	"strings"

	"gopkg.in/yaml.v3"
)

type NucleiTemplate struct {
	Info struct {
		Name string `yaml:"name"`
	} `yaml:"info"`
	Requests []struct {
		Path []string `yaml:"path"`
	} `yaml:"requests"`
}

func FindMatchingTemplates(url, dir string) ([]string, error) {
	var matched []string
	err := filepath.WalkDir(dir, func(path string, d fs.DirEntry, err error) error {
		if err != nil || d.IsDir() || !strings.HasSuffix(d.Name(), ".yaml") {
			return nil
		}
		data, err := os.ReadFile(path)
		if err != nil {
			return nil
		}
		var tpl NucleiTemplate
		if err := yaml.Unmarshal(data, &tpl); err != nil {
			return nil
		}
		for _, req := range tpl.Requests {
			for _, p := range req.Path {
				if strings.Contains(url, p) {
					matched = append(matched, path)
					break
				}
			}
		}
		return nil
	})
	return matched, err
}

func GenerateTemplate(url string) string {
	host := url
	if strings.Contains(url, "://") {
		parts := strings.SplitN(url, "://", 2)
		host = parts[1]
	}
	return `id: autogenerated-template

info:
  name: Auto Template for ` + url + `
  author: nuclei-gui
  severity: info

requests:
  - method: GET
    path:
      - "` + url + `"
    matchers:
      - type: word
        words:
          - "` + host + `"
`
}
